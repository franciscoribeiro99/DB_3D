// If you update this, you need to run "npm run generate" to regenerate prisma auto completion

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DISTANT_DATABASE")
}

model Product {
  productid Int         @id @unique @default(autoincrement())
  name      String
  sizex     Int
  sizey     Int
  sizez     Int
  OrderItem OrderItem[]

  @@map("product")
}

model City {
  cityid   Int        @id @unique @default(autoincrement())
  city     String
  zip      Int
  Customer Customer[]

  @@unique([city, zip], name: "CityZipUnique")
  @@map("city")
}

model Customer {
  customerid Int     @id @unique @default(autoincrement())
  fname      String
  lname      String
  email      String  @unique
  address    String
  cityid     Int
  city       City    @relation(fields: [cityid], references: [cityid])
  order      Order[]

  @@map("customer")
}

model Status {
  statusid Int     @id @unique @default(autoincrement())
  status   String
  Order    Order[]
}

model OrderItem {
  orderid    Int
  order      Order    @relation(fields: [orderid], references: [orderid])
  productid  Int
  product    Product  @relation(fields: [productid], references: [productid])
  materialid Int
  material   Material @relation(fields: [materialid], references: [materialid])
  printerid  Int
  quantity   Int

  @@unique([orderid, printerid, productid, materialid])
  @@map("orderitem")
}

model Order {
  orderid    Int         @id @unique @default(autoincrement())
  statusid   Int
  status     Status   @relation(fields: [statusid], references: [statusid])
  orderdate  DateTime
  datecompleted DateTime?
  customerid Int
  finalprice Int
  customer   Customer    @relation(fields: [customerid], references: [customerid])
  OrderItem  OrderItem[]

  @@unique([orderid, customerid], name: "OrderIdentifier")
  @@map("orders")
}

model Material {
  materialid            Int                            @id @unique @default(autoincrement())
  name                  String
  price                 Int
  color                 String
  stock                 Int
  materialtype          String
  printerscompatibility PrinterMaterialcompatibility[]
  OrderItem             OrderItem[]

  @@map("material")
}

model Printers {
  printerid          Int                            @id @unique @default(autoincrement())
  name               String
  printtype      Int
  printertype        PrintType                      @relation(fields: [printtype], references: [printtypeid])
  printx             Int
  printy             Int
  printz             Int
  materialcompatible PrinterMaterialcompatibility[]

  @@map("printer")
}

model PrintType {
  printtypeid Int        @id @unique @default(autoincrement())
  printtype   String
  Printers    Printers[]

  @@map("printtype")
}

model PrinterMaterialcompatibility {
  printerid  Int
  materialid Int
  material   Material @relation(fields: [materialid], references: [materialid])
  printer    Printers @relation(fields: [printerid], references: [printerid])

  @@unique([printerid, materialid], name: "PrinterMaterialIdentifier")
  @@map("printermaterialcompatibility")
}
